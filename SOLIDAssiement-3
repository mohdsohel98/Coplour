
public class Program
{
    public static void Main(string[] args)
    {
   

        Customer cust = new Customer()
        {
            CustomerId = 37,
            FirstName = "Sohel",
            LastName = "Mansoori",
            Email = "khanSohel8960@gmail.com",
            Type = CustomerType.Platinum
        };

     ILogger databaseLogger = new LogTODataBase();
        ILogger activityLogger = new ActivityLog();
        Offers offers = new Offers();
        CustomerRegerstation registration = new CustomerRegerstation();
        ProcessOrder order = new ProcessOrder();
        // Register customers
        registration.RegisterationNumber = 1;
        registration.Register(cust, databaseLogger);
        registration.Display(cust);

        // Process orders
        order.ProcessOrd(activityLogger, offers, cust);
    }
}



// Logger Interfaces & Classes
public interface ILogger {
   void Log();
    }
public class LogTODataBase : ILogger
 { 
  public void Log() => Console.WriteLine("Save to the database");
  
   }
public class ActivityLog : ILogger { 
  public void Log() => Console.WriteLine("The activity log");
  
   }

// Customer Interfaces & Classes
public interface ICustomerDetails
{
    int CustomerId { get; set; }
    string FirstName { get; set; }
    string LastName { get; set; }
    string Email { get; set; }
    CustomerType Type { get; set; }
}

public class Customer : ICustomerDetails
{
    public int CustomerId { get; set; }
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public string Email { get; set; }
    public CustomerType Type { get; set; }
}

// Registration Interface & Class
public interface IRegisteration
{
    int RegisterationNumber { get; set; }
    void Register(Customer cust, ILogger log);
    void SaveCustomer(ILogger log);
    void Display(Customer cust);
}

public class CustomerRegerstation : IRegisteration
{
    private ILogger _log;
    public int RegisterationNumber { get; set; }

    public void Register(Customer cust, ILogger log)
    {

  if (cust.Type == CustomerType.Bronze)
            {
                //some logic
            }
            if (cust.Type == CustomerType.Silver)
            {
                //some logic
            }
            if (cust.Type == CustomerType.Gold)
            {
                //some logic
            }
            if (cust.Type == CustomerType.Platinum)
            {
                //some logic
            }
            SaveCustomer(log);

    }

    public void SaveCustomer(ILogger log)
    {
        _log = log;
        try
        {
            _log.Log();
            Console.WriteLine("The customer details have been saved to the database");
        }
        catch (Exception err)
        {
            Console.WriteLine(err);
        }
    }

    public void Display(Customer cust)
    {
        Console.WriteLine($"ID : {cust.CustomerId}");
        Console.WriteLine($"First Name : {cust.FirstName}");
        Console.WriteLine($"Last Name : {cust.LastName}");
        Console.WriteLine($"Email : {cust.Email}");
        Console.WriteLine($"Type : {cust.Type}");
        Console.WriteLine($"Registration Number: {this.RegisterationNumber}");
    }
}

// Order Interfaces & Classes
public interface IOrders
{
    int NumberOfOrders { get; set; }
    string ProductType { get; set; }
}

public interface IProcessOrder : IOrders
{
    string Location { get; set; }
    void OrderOf(Customer cust);
    void ProcessOrd(ILogger log, Offers ofr, Customer cust);
    int CheckforOffers(Offers ofr, Customer cust);
}

public class ProcessOrder : IProcessOrder
{
    private ILogger _log;
    public int NumberOfOrders { get; set; }
    public string ProductType { get; set; }
    public string Location { get; set; }

    public void OrderOf(Customer cust) => Console.WriteLine($"The order is of: {cust.CustomerId}");

    public void ProcessOrd(ILogger log, Offers ofr, Customer cust)
    {
        int discount = CheckforOffers(ofr, cust);
        _log = log;
        _log.Log();
    }

    public int CheckforOffers(Offers ofr, Customer cust) => ofr.GetDiscountPercentage(cust);
}

// Offers Interface & Class
public interface IOffers
{
    int GetDiscountPercentage(Customer cust);
    int GetAvilableCupon(Customer cust);
}

public class Offers : IOffers
{
    public int GetDiscountPercentage(Customer cust)
    {
        return cust.Type switch
        {
            CustomerType.Bronze => 10,
            CustomerType.Silver => 20,
            CustomerType.Gold => 30,
            CustomerType.Platinum => 40,
            _ => 12
        };
    }

    public int GetAvilableCupon(Customer cust) => 121212; // Dummy logic
}

//  Customer type enum 
public enum CustomerType
{
    Bronze,
    Silver,
    Gold,
    Platinum
}
